// <auto-generated />
using System;
using KiemTraWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KiemTraWeb.Migrations
{
    [DbContext(typeof(KiemTraWebContext))]
    [Migration("20241223183601_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KiemTraWeb.Models.ChiTietDangKy", b =>
                {
                    b.Property<int>("MaCTDK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCTDK"));

                    b.Property<int>("MaDK")
                        .HasColumnType("int");

                    b.Property<string>("MaHP")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("MaCTDK");

                    b.HasIndex("MaDK");

                    b.HasIndex("MaHP");

                    b.ToTable("ChiTietDangKy");
                });

            modelBuilder.Entity("KiemTraWeb.Models.DangKy", b =>
                {
                    b.Property<int>("MaDK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDK"));

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDK")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDK");

                    b.HasIndex("MaSV");

                    b.ToTable("DangKy");
                });

            modelBuilder.Entity("KiemTraWeb.Models.HocPhan", b =>
                {
                    b.Property<string>("MaHP")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("SoLuongDuKien")
                        .HasColumnType("int");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenHP")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaHP");

                    b.ToTable("HocPhan");
                });

            modelBuilder.Entity("KiemTraWeb.Models.NganhHoc", b =>
                {
                    b.Property<string>("MaNganh")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("TenNganh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaNganh");

                    b.ToTable("NganhHoc");

                    b.HasData(
                        new
                        {
                            MaNganh = "CNTT",
                            TenNganh = "Công nghệ thông tin"
                        },
                        new
                        {
                            MaNganh = "KTPM",
                            TenNganh = "Kỹ thuật phần mềm"
                        },
                        new
                        {
                            MaNganh = "HTTT",
                            TenNganh = "Hệ thống thông tin"
                        },
                        new
                        {
                            MaNganh = "KHMT",
                            TenNganh = "Khoa học máy tính"
                        },
                        new
                        {
                            MaNganh = "TMDT",
                            TenNganh = "Thương mại điện tử"
                        });
                });

            modelBuilder.Entity("KiemTraWeb.Models.SinhVien", b =>
                {
                    b.Property<string>("MaSV")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Hinh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaNganh")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.HasKey("MaSV");

                    b.HasIndex("MaNganh");

                    b.ToTable("SinhVien");
                });

            modelBuilder.Entity("KiemTraWeb.Models.ChiTietDangKy", b =>
                {
                    b.HasOne("KiemTraWeb.Models.DangKy", "DangKy")
                        .WithMany("ChiTietDangKys")
                        .HasForeignKey("MaDK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KiemTraWeb.Models.HocPhan", "HocPhan")
                        .WithMany("ChiTietDangKys")
                        .HasForeignKey("MaHP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DangKy");

                    b.Navigation("HocPhan");
                });

            modelBuilder.Entity("KiemTraWeb.Models.DangKy", b =>
                {
                    b.HasOne("KiemTraWeb.Models.SinhVien", "SinhVien")
                        .WithMany()
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("KiemTraWeb.Models.SinhVien", b =>
                {
                    b.HasOne("KiemTraWeb.Models.NganhHoc", "NganhHoc")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaNganh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NganhHoc");
                });

            modelBuilder.Entity("KiemTraWeb.Models.DangKy", b =>
                {
                    b.Navigation("ChiTietDangKys");
                });

            modelBuilder.Entity("KiemTraWeb.Models.HocPhan", b =>
                {
                    b.Navigation("ChiTietDangKys");
                });

            modelBuilder.Entity("KiemTraWeb.Models.NganhHoc", b =>
                {
                    b.Navigation("SinhViens");
                });
#pragma warning restore 612, 618
        }
    }
}
